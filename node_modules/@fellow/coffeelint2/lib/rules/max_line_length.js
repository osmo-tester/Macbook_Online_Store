(function() {
  var MaxLineLength, regexes;

  regexes = {
    literateComment: /^\#\s/,
    longUrlComment: /^\s*\#\s*http[^\s]+$/
  };

  module.exports = MaxLineLength = (function() {
    class MaxLineLength {
      lintLine(line, lineApi) {
        var limitComments, lineLength, max, ref, ref1;
        max = (ref = lineApi.config[this.rule.name]) != null ? ref.value : void 0;
        limitComments = (ref1 = lineApi.config[this.rule.name]) != null ? ref1.limitComments : void 0;
        lineLength = line.replace(/\s+$/, '').length;
        if (lineApi.isLiterate() && regexes.literateComment.test(line)) {
          lineLength -= 2;
        }
        if (max && max < lineLength && !regexes.longUrlComment.test(line)) {
          if (!limitComments) {
            if (lineApi.getLineTokens().length === 0) {
              return;
            }
          }
          return {
            columnNumber: max,
            context: `Length is ${lineLength}, max is ${max}`
          };
        }
      }

    };

    MaxLineLength.prototype.rule = {
      name: 'max_line_length',
      value: 80,
      level: 'error',
      limitComments: true,
      message: 'Line exceeds maximum allowed length',
      description: 'This rule imposes a maximum line length on your code. <a\nhref="http://www.python.org/dev/peps/pep-0008/">Python\'s style\nguide</a> does a good job explaining why you might want to limit the\nlength of your lines, though this is a matter of taste.\n\nLines can be no longer than eighty characters by default.'
    };

    return MaxLineLength;

  }).call(this);

}).call(this);
