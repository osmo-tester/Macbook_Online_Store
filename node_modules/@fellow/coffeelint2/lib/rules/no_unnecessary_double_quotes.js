(function() {
  var NoUnnecessaryDoubleQuotes;

  module.exports = NoUnnecessaryDoubleQuotes = (function() {
    class NoUnnecessaryDoubleQuotes {
      constructor() {
        this.regexps = [];
        this.interpolationLevel = 0;
      }

      lintToken(token, tokenApi) {
        var hasLegalConstructs, ref, stringValue, tokenValue, type;
        [type, tokenValue] = token;
        if (type === 'STRING_START' || type === 'STRING_END') {
          return this.trackParens(...arguments);
        }
        stringValue = tokenValue.match(/^\"(.*)\"$/);
        if (!stringValue) { // no double quotes, all OK
          return false;
        }
        
        // When CoffeeScript generates calls to RegExp it double quotes the 2nd
        // parameter. Using peek(2) becuase the peek(1) would be a CALL_END
        if (((ref = tokenApi.peek(2)) != null ? ref[0] : void 0) === 'REGEX_END') {
          return false;
        }
        hasLegalConstructs = this.isInInterpolation() || this.hasSingleQuote(tokenValue);
        if (!hasLegalConstructs) {
          return {token};
        }
      }

      isInInterpolation() {
        return this.interpolationLevel > 0;
      }

      trackParens(token, tokenApi) {
        if (token[0] === 'STRING_START') {
          this.interpolationLevel += 1;
        } else if (token[0] === 'STRING_END') {
          this.interpolationLevel -= 1;
        }
        // We're not linting, just tracking interpolations.
        return null;
      }

      hasSingleQuote(tokenValue) {
        return tokenValue.indexOf("'") !== -1;
      }

    };

    NoUnnecessaryDoubleQuotes.prototype.rule = {
      name: 'no_unnecessary_double_quotes',
      level: 'ignore',
      message: 'Unnecessary double quotes are forbidden',
      description: 'This rule prohibits double quotes unless string interpolation is\nused or the string contains single quotes.\n<pre>\n<code># Double quotes are discouraged:\nfoo = "bar"\n\n# Unless string interpolation is used:\nfoo = "#{bar}baz"\n\n# Or they prevent cumbersome escaping:\nfoo = "I\'m just following the \'rules\'"\n</code>\n</pre>\nDouble quotes are permitted by default.'
    };

    NoUnnecessaryDoubleQuotes.prototype.tokens = ['STRING', 'STRING_START', 'STRING_END'];

    return NoUnnecessaryDoubleQuotes;

  }).call(this);

}).call(this);
