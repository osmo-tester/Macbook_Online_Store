import octokit from '@octokit/rest';
/**
 * Url string, should start with "https://..."
 */
export declare type url = string;
/**
 * Github comments allow markdown
 */
export declare type markdown = string;
export declare const getAppVeyorBuildUrl: () => string | undefined;
/**
 * Returns the current build job url based on built-in environment variables on various CIs
 * @see CircleCI https://circleci.com/docs/2.0/env-vars/
 * @see AppVeyor https://www.appveyor.com/docs/environment-variables/
 */
export declare const getTargetUrl: () => string | undefined;
export declare namespace GitHub {
    /**
     * Full commit SHA (40 hex characters, lowercase)
     */
    type SHA = string;
    /**
     * Commit status state
     */
    enum StatusState {
        error = "error",
        failure = "failure",
        pending = "pending",
        success = "success"
    }
    type CommitStatusOptions = {
        owner: string;
        repo: string;
        sha: string;
        state: StatusState;
        context: string;
        targetUrl?: url;
        description?: string;
    };
    function setCommitStatus(options: CommitStatusOptions, gh: octokit): Promise<void>;
    type CommitCommentOptions = {
        owner: string;
        repo: string;
        sha: string;
        comment: markdown;
    };
    function addCommitComment(options: CommitCommentOptions, gh: octokit): Promise<void>;
}
/**
 * Top level API method for getting GitHub settings from the environment,
 * creating the client and creating the status.
 *
  ```
  import {setCommitStatus} from '@cypress/github-commit-status-check'

  await setCommitStatus({
    owner: 'organization',
    repo: 'name',
    sha: '40 character commit sha',
    // state can be "error", "pending", "failure" or "success"
    state: 'pending',
    // optional properties
    targetUrl: 'http://...',
    description: 'my status message',
    context: 'short context'
  })
  ```
 */
export declare function setCommitStatus(options: GitHub.CommitStatusOptions): Promise<void>;
/**
 * Adds arbitrary comment to a specific commit
 */
export declare function addCommitComment(options: GitHub.CommitCommentOptions): Promise<void>;
